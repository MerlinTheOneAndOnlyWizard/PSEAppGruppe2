@startuml

skinparam monochrome true
skinparam shadowing false
skinparam genericDisplay old
skinparam classAttributeIconSize 0
hide circle


package Spring{
class HandlerInterceptorAdaper{}
class WebMvcConfigurerAdapeter{}

}

package Server
{
   GeneralConfig - LoginIntercepter


/'interface RequestToServer<<interface>>{

  +saveDelta(project: int, delta: String, user: String) /' don't know the Type of Token nor String
  +getLatestDelta(lastDataIdentifier: String, user: String): JSON
  +addUser(project: int, user: String): String
   +removeUser(project: int, delta: String, removedUser: String, admin: String): void
   +getOldData(lastDataIdentifier: String, project: int, user: String ): JSON /' i'm not sure if its enough


    +showPosts(user: String): List of png /'probably Png
    +displayPost(postID: int, user: String): List of png /'probably Png
    +downloadTemplate(templateID: int, String): JSON /' i'm not sure, if we have something like a templateID, or we need a postID and a templateID

  }

note right of RequestToServer
  First request for using the server, triggered by an action from the user.
    end note


'/


    class ServerApplication <<SpringBootApplication>>{
        main(this:ServerApplication,args:String[])
    }
    class GeneralConfig extends WebMvcConfigurerAdapeter{
        getInterceptor():LoginIntercepter
        addInterceptor()
    }
    class LoginIntercepter extends HandlerInterceptorAdaper {
        preHandle():boolean
    }


  class Tupel <T,U> {
      - first: T
      - second: U
  }
}
LoginIntercepter ... Firebase : uses >
package Firebase {
}


@enduml