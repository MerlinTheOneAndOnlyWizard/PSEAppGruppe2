@startuml
skinparam monochrome true
skinparam shadowing false
skinparam genericDisplay old
skinparam classAttributeIconSize 0
hide circle

package RemoteDataSource {

class ServerClientAPI {
	+ GetBefehl()
}




!include UserManager\UserManager.puml!UserManager
!include CommandLogic\CommandLogic.puml!CommandLogic
!include ServerConnection\ServerConnection.puml!ServerConnection
}

package Server {
	
}


' Aggregationen:

' ServerClientAPI ist eine _Fassade_ -> Muss als einzige Klasse vom Repository aufgerufen werden
ServerClientAPI "1" *-- "1" UserAccount: contains
ServerClientAPI "1" *-- "1" RESTController: contains
ServerClientAPI "1" *-- "1" CommandController: contains

' Commands muessen an den Server gesendet werden
CommandController "1" *-left- "1" RESTController: contains

' Serverconnection
RESTController "1" .down.> "1" Server

' Ideen fuer Spaeter:
'    - Benutze _Singleton_ fuer ResAPI dmit ServerClient und CommandAPI die gleiche RESTAPI besitzen

class FirebaseAPI {
}


' Firebase conntection
FirebaseManager "1" ..> "1" FirebaseAPI: uses
@enduml