skinparam monochrome true
skinparam shadowing false
skinparam genericDisplay old
skinparam classAttributeIconSize 0
hide circle

package Queues{

package ProjectCommandQueue {

class ProjectCommandQueue {
    - projectCommands: List<JSON>
    - projectCommandQueueObserver: List<ProjectCommandQueueObserver>
    ..QueueLogic..
    + GetProjectCommand(): ProjectCommandInfo
    + AddProjectCommand(projectCommand: ProjectCommandInfo)
    ..ObserverLogic..
    + registerObserver(toObserve: ProjectCommandQueueObserver)
    + unregisterObserver(toStopObeserving: ProjectCommandQueueObserver)
    - notifyObservers()
}

class ProjectCommandQueueObserver <<interface>><<observer>>{
    + update()
}


ProjectCommandQueue "1" *-up- "1" ProjectCommandQueueObserver
}




package FetchRequestQueue {
' Store the fetchRequests for the ProjectCommands
class FetchRequestQueue {
    - fetchRequests: List<JSON>
    - observer: List<FetchRequestQueueObserver>
    ..QueueLogic..
    + GetFetchRequest(): JSON
    + AddFetchRequest(fetchRequest: JSON)
    ..ObserverLogic..
    + registerObserver(FetchRequestsQueueObserver)
    + unregisterObserver(FetchRequestsQueueObserver)
    - notifyObservers()
}

class FetchRequestsQueueObserver <<interface>><<observer>>{
    + update()
}


FetchRequestQueue "1" *-up- "1" FetchRequestsQueueObserver 

}




}

class ProjectCommandInfo <<dataclass>> {
    - wentOnline : int 
    - serverRemoveTime: int
    - commandByUser: String
    - isProjectAdmin: boolean

    - projectCommand: JSON
    getWentOnline(): int
    getServerRemoveTime(): int
    getCommandByUser(): String
    getIsProjectAdmin(): boolean
    getProjectCommand(): JSON
}
