@startuml

skinparam monochrome true
skinparam shadowing false
skinparam genericDisplay old
skinparam classAttributeIconSize 0
hide circle


abstract class AppDataBase {
  ..Entities..
  IntegerValue
  TimeValue
  ..TypeConverters..
  DateTimeConversion
  UserConversion
}

package Entities {
    '@Entity(primaryKeys=["tableId", "rowId"])
    class RowEntity {
        projectId: Integer
        rowId: Integer
        createdOn: DateTime
        createdBy: User
        values: String
    }

    '@Entity
    class ProjectEntity {
        'PrimaryKey
        id: Integer
        '@Embedded
        skeleton: ProjectSkeletonEntity
        admin: User
    }

    '@Entity
    class ProjectTemplateEntity {
        id: Integer
        tableLayoutId: Integer
        '@Embedded
        skeleton: ProjectSkeletonEntity
    }

    '@Entity
    class ProjectCustomizingEntity {
        'PrimaryKey
        id: Integer
        name: String
        'Embedded
        customizing: ProjectCustomizing
    }
  
    '@Entity
    class GraphEntity {
        'PrimaryKey
        id: Integer
        skeletonId: Integer
        'Embedded
        map: TableGraphTransformation
        picturePath: String
    }
  
    '@Entity
    class GraphTemplate {
        id: Integer
        name: String
        createdBy: String
        'Embedded
        customizing: GraphCustomizing
    }

    '@Entity(primaryKey=["projectId", "name"])
    class ProjectSettingEntity {
        projectId: Integer
        name: String
        value: String
    }

    '@Entity(primaryKey=["projectId", "name"])
    class GraphSettingsEntity {
        graphId: Integer
        name: String
        value: String
    }
  
    class ProjectSkeletonEntity {
        id: Integer
        name: String
        description: String
        wallpaper: String
        thumbnail: String
        layout: String
    }

    '@Entity(primaryKey=["projectId", "user"])
    class UserProjectMap {
        projectId: Integer
        user: User
    }
}

package DAOs {
  interface IntegerDAO {
    insertAll(vararg integers: IntegerRow): Unit
    getAll(): List<IntegerRow>
    getByRow(row: Integer): List<IntegerRow>
    delete(integer: IntegerRow): Unit
  }
  
  interface DateTimeDAO {
    insertAll(vararg times: DateTimeRow): Unit
    getAll(): List<DateTimeRow>
    getByRow(row: Integer): List<DateTimeRow>
    delete(integer: DateTimeRow): Unit
  }
}

package TypeConverters {
    class DateTimeConversion {
        DateTimeToLong(DateTime): Long
        LongToDateTime(Long): DateTime
    }

    class UserConversion {
        UserToString(User): String
        StringToUser(String: User
    }
}

note bottom of UserConversion
    might want to save users as
    json (UserId, name, dont know
    what else?)
end note

class TableAccess {
  getRow(row: Integer)
}

class Project {
  - name: String
  - description: String
  ~ Constructor(ProjectTemplate) : Project
  ~ setName(String)
}
Project - "0..1" Wallpaper : has >
Project -- "0..n" Notification : has >
Project "1" - "1" Table : has data of <
Project "1" -- "0..n" Graph


class Wallpaper {
  name: String
  path: String
  'Some kind of method to read the specified file and return the image or whatever is needed for the UI
}

class Notification {
  
}

class DataType<T> {
  
}

class Table {
  getRow(Integer) : Collection<DataType>
}
'Das sollten wahrscheinlich unbounded Arrays werden
Table -- "1..n" ProjectTableColumnProperties
Table - "0..m" ProjectTableRow

class ProjectTableRow {
  
}
ProjectTableRow - "1..n" ProjectEntry

class ProjectEntry<T> {
  value: T
}

class ProjectTableColumnProperties {
  - id: Integer
  - name: String
  - unit: String
  - uiElement: () -> Unit
}

class Graph {
  
}
Graph -- GraphCustomizing : has >
Graph - GraphData : is generated from >
(Graph, GraphData) .. TableGraphTransformation : by applying

class GraphData {
  
}
GraphData o-- "1..n" DataSeries

class DataSeries {
  
}

class GraphCustomizing {
  
}

class TableGraphTransformation {
  
}



TableAccess - IntegerDAO
TableAccess - DateTimeDAO

RoomDatabase <|-- AppDataBase

AppDataBase -[hidden]-> TableAccess
DAOs -[hidden]> TypeConverters
TableAccess -[hidden]-> DAOs
Table -[hidden]-> Wallpaper
GraphCustomizing -[hidden]-> TableValue


@enduml