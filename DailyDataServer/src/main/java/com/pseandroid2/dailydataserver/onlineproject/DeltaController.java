package com.pseandroid2.dailydataserver.onlineproject;

import org.springframework.web.bind.annotation.*;


import java.util.ArrayList;
import java.util.Date;
import java.util.List;

@RestController
@RequestMapping("/OnlineDatabase/Delta")
public class DeltaController {

    /**
     * creates a new delta for a project to save one command.
     *
     * @param Command   One command in JSON format
     * @param projectId declares to which projects the command belongs
     * @param user           the user, who adds the Data, generated by the server
     * @param token          need to validate the user, provided by the client
     */
    @PostMapping("/save/{projectId}")
    public void saveDelta(String Command, @PathVariable long projectId,@RequestAttribute String user,
                          @RequestHeader String token) {
    }

    /**
     * Provides all new Deltas which belongs to a project and all old deltas which belongs to the user.
     *
     * @param projectId declares from which the delta is recommended
     * @param user           the user, who adds the Data, generated by the server
     * @param token          need to validate the user, provided by the client
     * @return a list of recommended Deltas
     */
    @GetMapping("/get/{projectId}")
    public List<Delta> getDelta(@PathVariable long projectId, @RequestAttribute String user,
                                @RequestHeader String token) {
        return new ArrayList<>();
    }

    /**
     * recreates an old delta, for a defined person and project.
     *
     * @param projectId      to which project the delta belongs, provided in the URL
     * @param command        the command for the delta, provided by the client
     * @param forUser        which User needs the delta, Uid, provided by the client
     * @param initialAdded   when was the Delta initially added, provided by the client
     * @param initialAddedBy who added the Delta initially, provided by the client
     * @param wasAdmin       was the person at this time admin, provided by the client
     * @param user           the user, who adds the Data, generated by the server
     * @param token          need to validate the user, provided by the client
     */
    @PostMapping("/provide/{projectId}")
    public void provideOldData(@PathVariable long projectId, @RequestParam String command, @RequestParam String forUser,
                               @RequestParam Date initialAdded, @RequestParam String initialAddedBy,
                               @RequestParam boolean wasAdmin, @RequestAttribute String user,
                               @RequestHeader String token) {
    }

    /**
     * Returns the time, after which a new delta gets deleted.
     * @param token          need to validate the user, provided by the client
     * @return time, after which a delta gets deleted.
     */
    @GetMapping("/time")
    public Date getRemoveTime(@RequestHeader String token) {
        return new Date();

    }
}
